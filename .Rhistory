#| message: FALSE
library(here)
if(!file.exists(here("data","tuesdata_rainfall.RDS"))){
tuesdata <- tidytuesdayR::tt_load('2020-01-07')
rainfall <- tuesdata$rainfall
temperature <- tuesdata$temperature
# save the files to RDS objects
saveRDS(tuesdata$rainfall, file = here("data","tuesdata_rainfall.RDS"))
saveRDS(tuesdata$temperature, file = here("data","tuesdata_temperature.RDS"))
}
#| message: FALSE
library(tidyverse)
library(stringr)
library(tidyr)
library(lubridate)
#| message: FALSE
#| warning: FALSE
# wrangling data
rainfall %>%
drop_na() %>%
unite(date,c(year,month,day)) %>%
mutate(date = ymd(date)) %>%
mutate(year = as.integer(substr(date,1,4))) %>%
mutate(city_name = str_to_upper(city_name)) %>%
inner_join(temperature, id = c("city_name","date")) %>%
filter(year >= 2015) -> df
?tt_load
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(tidyr)
library(lubridate)
tuesdata <- tidytuesdayR::tt_load('2020-01-07')
rainfall <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-07/rainfall.csv')
temperature <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-07/temperature.csv')
View(rainfall)
#| message: FALSE
rainfall <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-07/rainfall.csv')
temperature <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-07/temperature.csv')
#| message: FALSE
library(tidyverse)
library(stringr)
library(tidyr)
library(lubridate)
#| message: FALSE
#| warning: FALSE
# wrangling data
rainfall %>%
drop_na() %>%
unite(date,c(year,month,day)) %>%
mutate(date = ymd(date)) %>%
mutate(year = as.integer(substr(date,1,4))) %>%
mutate(city_name = str_to_upper(city_name)) %>%
inner_join(temperature, id = c("city_name","date")) %>%
filter(year >= 2015) -> df
#| column: margin
knitr::kable(
head(df[1:6, 1:5])
)
#| message: FALSE
# bar plot year vs mean rainfall
df %>%
group_by(city_name, year) %>%
summarise(mean_rainfall = mean(rainfall)) %>%
ggplot(aes(fill=city_name, y=mean_rainfall, x=year)) +
geom_bar(position="dodge", stat="identity") +
labs(title = "Average of Rainfall v.s. Year (2015-2019)",
subtitle = "Canberra has the lowest mean rainfall each year,
and Perth have the highest mean rainfall in year 2015-2019.",
x = "Year",
y = "Mean of Rainfall")
#| message: FALSE
calculate_CI <- function(x, conf = 0.95) {
degrees_freedom = length(x)-1
alpha = 1 - conf
t_score = qt(p=alpha/2, df=degrees_freedom, lower.tail=FALSE)
lower_bound = mean(x,na.rm = T) - t_score*(sd(x,na.rm = T)/sqrt(length(x)))
upper_bound = mean(x,na.rm = T) + t_score*(sd(x,na.rm = T)/sqrt(length(x)))
return(c("lower_bound" = lower_bound,
"upper_bound" = upper_bound))
}
# line plot year vs mean temp
df %>%
group_by(city_name, year, temp_type) %>%
summarise(mean_temp = mean(temperature,na.rm = T),
lower_bound = calculate_CI(temperature)[1],
upper_bound = calculate_CI(temperature)[2]) %>%
ggplot(aes(x = year,y= mean_temp, color = temp_type)) +
geom_line()+
geom_errorbar(aes(ymin = lower_bound, ymax = upper_bound), width = 0.1, color = "red") +
facet_wrap(~city_name)+
labs(title = "Average and 95% Confidence Interval for Temperature for Five Cities with Year (2015-2019)",
subtitle = "Canberra has the lowest mean temperature each year,
and Sydney and Brisbane have the highest mean temperature in year 2015-2019.",
x = "Year",
y = "Mean of Temperature")
#| message: FALSE
#| warning: FALSE
df %>%
ggplot(aes(x= log(rainfall))) +
geom_histogram() +
facet_wrap(~city_name)+
labs(title = "Distribution of Rainfall for Five Cities in the Year (2015-2019)",
subtitle = "Distribution of rainfall for Perth is most normal distributed,
Brisbane, Canberra, Melbourne has some left outliers for the distribution of rainfall.",
x = "log(rainfall)",
y = "frequency")
knitr::write_bib("rmarkdown", file = "my-refs.bib")
View(df)
head(df[1:6,c(2:4,10:12)])
#| message: FALSE
rainfall <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-07/rainfall.csv')
temperature <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-07/temperature.csv')
#| message: FALSE
library(tidyverse)
library(stringr)
library(tidyr)
library(lubridate)
#| message: FALSE
#| warning: FALSE
# wrangling data
rainfall %>%
drop_na() %>%
unite(date,c(year,month,day)) %>%
mutate(date = ymd(date)) %>%
mutate(year = as.integer(substr(date,1,4))) %>%
mutate(city_name = str_to_upper(city_name)) %>%
inner_join(temperature, id = c("city_name","date")) %>%
filter(year >= 2015) -> df
#| column: margin
knitr::kable(
head(df[1:6,c(2:4,10:12)])
)
#| message: FALSE
# bar plot year vs mean rainfall
df %>%
group_by(city_name, year) %>%
summarise(mean_rainfall = mean(rainfall)) %>%
ggplot(aes(fill=city_name, y=mean_rainfall, x=year)) +
geom_bar(position="dodge", stat="identity") +
labs(title = "Average of Rainfall v.s. Year (2015-2019)",
subtitle = "Canberra has the lowest mean rainfall each year,
and Perth have the highest mean rainfall in year 2015-2019.",
x = "Year",
y = "Mean of Rainfall")
#| message: FALSE
#| warning: FALSE
df %>%
ggplot(aes(x= log(rainfall))) +
geom_histogram() +
facet_wrap(~city_name)+
labs(title = "Distribution of Rainfall for Five Cities in the Year (2015-2019)",
subtitle = "Distribution of rainfall for Perth is most normal distributed,
Brisbane, Canberra, Melbourne has some left outliers for the distribution of rainfall.",
x = "log(rainfall)",
y = "frequency")
#| message: FALSE
calculate_CI <- function(x, conf = 0.95) {
degrees_freedom = length(x)-1
alpha = 1 - conf
t_score = qt(p=alpha/2, df=degrees_freedom, lower.tail=FALSE)
lower_bound = mean(x,na.rm = T) - t_score*(sd(x,na.rm = T)/sqrt(length(x)))
upper_bound = mean(x,na.rm = T) + t_score*(sd(x,na.rm = T)/sqrt(length(x)))
return(c("lower_bound" = lower_bound,
"upper_bound" = upper_bound))
}
# line plot year vs mean temp
df %>%
group_by(city_name, year, temp_type) %>%
summarise(mean_temp = mean(temperature,na.rm = T),
lower_bound = calculate_CI(temperature)[1],
upper_bound = calculate_CI(temperature)[2]) %>%
ggplot(aes(x = year,y= mean_temp, color = temp_type)) +
geom_line()+
geom_errorbar(aes(ymin = lower_bound, ymax = upper_bound), width = 0.1, color = "red") +
facet_wrap(~city_name)+
labs(title = "Average and 95% Confidence Interval for Temperature for Five Cities with Year (2015-2019)",
subtitle = "Canberra has the lowest mean temperature each year,
and Sydney and Brisbane have the highest mean temperature in year 2015-2019.",
x = "Year",
y = "Mean of Temperature")
?phyper
phyper(7,15,15,19)
dhyper(0,15,15,11)+dhyper(1,15,15,11)+dhyper(2,15,15,11)
phyper(3,15,15,11)
dhyper(0,15,15,11)+dhyper(1,15,15,11)+dhyper(2,15,15,11)+dhyper(3,15,15,11)
?signif
dhyper(0:4,4,4,4)
## 1. Create a GitHub repo for your website
